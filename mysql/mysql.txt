Banco de dados - aula 17-05

Html, CSS e JS, Designer(Interface, Wireframe) = Front End - cliente, processado pelo navegador, 
*configuração do ambiente - Visual Studio Code, Figma etc
site estático: a pessoa que for atualizar precisa saber o html e css

one page(uma pagina só) 

ou 

landingpage (é uma pag one page mas vinda de uma rede social ou e-mail marketing, pagina especifica de um produto, e dessa pagina pode ir para outro conteúdo do mesmo site

ou

Hotsite - pagina de produto especifico.

Blog, Institucional


site dinamico: qualquer pessoa pode adicionar, pois já tem um painel administrativo para incluir informações
E-commerce

Frameworks JS(já tem a interação) para Front End = react js, angular js, vue js, python - tem um padrão e uma forma para fazer e escrever a forma visual do site, precisa escolher um Framwork ex: nubank, C6 bank, submarino, americanas, casas bahia

Back-End

Tem uma linguagem de programação - PHP, NodeJS(JS ServerSide), Python, Java

Banco de dados - 
MySQL (SQL) Gratuito e livre sendo o mais usado nos sites, desenvolvido pela comunidade (livre), a Oracle comprou o MySQL; 
MariaDB Fork - foi desenvolvido pelas mesmas pessoas do MySQL
SQL Server (SQL), usado mais por empresas,versão paga;
Oracle (SQL) mais usado em redes bancarias, mais seguro, versão paga;
Postgres (SQL), 
MongoDB (NO - SQL) usado junto com o NodeJS, 
Firebase (NO - SQL)

*stack de desenvolvimento = conjunto de tecnologia
Mais usada na região: Html/CSS/JS/PHP/MYSQL
Na moda: ReactJS/NodeSJ/MongoDB


Sistema Web
Notebook - usuário acessa pelo navegador (Html, CSS e JS)
Nuvem ou Internet - acesso para o servidor
Servidor(backend, usuário não vê) - recebe os dados do usuário em forma de variável, através da conexão verifica no
banco de dados as informações enviadas do usuário, se estiver certo acontece todo o caminho ao contrario para enviar a responsta ao usuário
Request = requisição



*configuração de ambiente: transformar o pc em um servidor web(programa Apache cria uma pasta para salvar os arquivos e depois conseguir acessar de qualquer computador) e servidor banco de dados
Processado pelo servidor.
Apache = Servidor Web
PHP = interpretar a linguagem
MYSQL = Banco de dados
Xampp = facilitador - X multiplataforma, a Apache, M MYSQL, P PHP, P PHER
Lamp = facilitador do linux
Amp = facilitador do windows

SGBD: Sistema Gerenciador de Banco de Dados
HeidiSQL = Ambiente DEV (ambiente de desenvolvimento)

Alternativas
Wordbench
PHPMyAdmin

brModelo - modelagem de dados
Desenvolver o software - precisa de uma documentação, fazer o modelo do banco de dados no BrModelo.
Planejamento - desenvolver - testar - melhorias - é um ciclo 

RESUMO DO AMBIENTE DE DESENVOLVIMENTO WEB
Será necessário:
VS Code
Xampp
Heidi

servidor thiago heidi - 10.97.46.100


aula 18-05

Uso do HeidiSQL

Databases = Base de dados - db_nomeprojeto
Todo sistema tem, para organizar dados daquele sistema.

Fica dentro da Databases: 
Tables = Tabelas - tb_nometabela

COMANDOS SQL = query 
*SHOW = comando de exibição
*SHOW DATABASES; - MOSTRA DAS DATAS BASES EXISTENTES QUE VOCÊ TEM ACESSO
*CREATE DATABASE db_nomeprojeto; para criar a database 
-- PARA COMENTAR NO HEIDI COLOCAR 2 TRAÇOS E ESPAÇO
*USE db_renata; seleciona database que iremos utilizar
Para executar precisa selecionar o comando e apertar ctrl+F9
*SHOW TABLES; - mostra das tabelas
*DESCRIBE tb_nometabela - mostra a estrutura da tabela

Tabelas formatação
id - (código unico) - numero inteiro = int
sabor - texto/string ou varchar (character e variavel)
ingredientes -texto
valor - float ou decimal, vai usar float quando precisar fazer calculo matemático
tamanho - texto, quando valor for fixo é char

ID INT - varialvel id, inteiro
AUTO_INCREMENT - vai criar os dados automaticamente seguindo a sequencia. Sempre vai ser no ID
PRIMARY KEY - coluna que não vai repetir, ex o cpf é unico
sabor VARCHAR (40) - coluna sabor, variavel e com no maximo 40 caracteres
NOT NULL - obrigatório preencher
valor FLOAT(6,2) NOT NULL - colocar a qnt de caracteres 222,22
tamanho CHAR(1) NOT NULL); - 

Criando tabela
*CREATE TABLE tb_pizzas (id INT AUTO_INCREMENT PRIMARY KEY, sabor VARCHAR (40) NOT NULL, valor FLOAT(6,2) NOT NULL, tamanho CHAR(1) NOT NULL);


*INSERT INTO tb_pizzas (sabor, ingredientes, valor, tamanho) VALUES ('Calabresa','Mussarela e Calabresa','39','G');
valor R$ tem que colocar ponto e não virgula
inserir dados na tabela, digitar todos os campos e dps o texto a ser inserido

*SELECT * FROM tb_nometabela; - para visualizar o que inseriu na tabela.

*DROP DATABASE db_nomeprojeto para deletar uma database vazia! Se tiver dados dentro vai deletar tudo, sem perguntar se tem certeza. - para deletar a tabela mudar o comando database para tables.


AULA 20-05

USANDO Xampp - Start no MySQL, abrir Shell para digitar COMANDOS

Entre parenteses esta o comando

abrir o mysql: (mysql -u root) e enter - conectar no mysql(banco de dados) e qual vai ser o usuario que vai conectar

AULA 24-05

Porta do mysql - 3306 (porta padrão)

*silencio no sucesso - quando não aparece mensagem é porque deu certo.

ALTER TABLE tb_funcionarios CHANGE cpf cpf CHAR(11) NOT NULL UNIQUE; = alterar uma coluna da tabela (tipo do campo), seja no field, type, null, key. precisa copiar o comando inteiro da onde quer alterar. 


ATIVIDADE - 24-05
Atividades SQL(MySQL)

Se já tiver a database, para deletar: DROP DATABASE db_biblioteca;

1.	Criar a database: 
•	db_biblioteca

2.	Criar a tabela:
•	tb_livros

Colunas
 id INT PK AI
 titulo VARCHAR(50) NN
 autor VARCHAR(50) NN
 ano CHAR(4) NN
 valor FLOAT(6,2) NN
 tempo char (4) NN

Inserir 3 livros a seu critério


Atividades 2 MySQL

Criar a database:
db_veiculos

Criar a tabela
tb_carros


comando exemplo = *CREATE TABLE tb_pizzas (id INT AUTO_INCREMENT PRIMARY KEY, sabor VARCHAR (40) NOT NULL, valor FLOAT(6,2) NOT NULL, tamanho CHAR(1) NOT NULL);

Campos da tabela
id INT PK AI
modelo 
marca 
ano 
cor 
valor

 INSERIR 1 CARRO

 AULA 25-05

 SELECT = seleciona os dados e colunas a serem exibidos

 SELECT * FROM tb_nometabela; = seleciona e mostra todos os dados e colunas da tabela

 SELECT produto,valor from tb_nometabela; = mostra o produto e valor. Depois do select coloca o nome da field.

 no comando Select o ideal é colocar quais quer mostrar na tela, e não usar o *, pois pode ter algum dado que não precisa aparecer para o usuário final.

 SELECT * FROM tb_nometabela where id_categoria=1; - vai mostrar somente os itens do campo escolhido.

 SELECT * FROM tb_nometabela where valor <= numero; - vai mostrar somente os itens menor ou igual ao numero selecionado.

 SELECT * FROM tb_nometabela fabricante= 'nome' or fabricante='nome'; - vai mostrar os produtos das fabricantes selecionadas

  SELECT * FROM tb_nometabela fabricante= 'nome' AND VALOR<=NUMERO ; - vai mostrar todos os produtos da fabricante no valor solicitado.



AND = e
OR = OU
 CRUD - C DE CREATE, R DE READ, U DE update, d delete

 SELECT COUNT(ID - pode ser qualquer coluna para ser referencia) FROM tb_produto; = mostra total de itens cadastrados

 SELECT MAX ou MIN(valor) ou FROM tb_nometabela; = mostra o maior valor dos produtos.

 SELECT AVG(valor) FROM tb_nometabela; = mostra a média dos preços dos produtos

 SELECT SUM(valor) FROM tb_nometabela; = soma itens cadastrados (1 de cada)

 SELECT SUM(valor)*SUM(quantidade) FROM tb_nometabela; = soma todos itens cadastrados 

 SELECT produto,valor,quantidade,valor*quantidade AS total FROM tb_nometabela; = lista o produto, valor e total das quantidades em estoque

 SELECT * FROM tb_nometabela order by valor; -  AS ascendente, ordem do menor para o maior;

SELECT * FROM tb_nometabela order by valor desc; - decrescente  ascendente, ordem do menor para o maior;
* pode colocar qualquer coluna quer ordenar

SELECT * FROM tb_nometabela limit 3; - mostra os 3 primeiros produtos, considerando a ordem do id - 

SELECT * FROM tb_nometabela where produto like '%nome%'; = trás os produtos com a palavra entre % que contenha na descrição



Atividades
1->Listar os produtos da fabricante Microsoft - select * from tb_produto where fabricante='Microsoft';

2->Listar os produtos com mais de 10 unidades no estoque - select * from tb_produto where quantidade >10;

3->Listar os produtos com valor maior de 5000 - select * from tb_produto where valor > 5000;

4->Listar os produtos em ordem alfabetica - select * from tb_produto order by produto;

 5->Listar apenas os 5 produtos com maior valor - select * from tb_produto order by valor desc limit 5;

 6->Listar os produtos que contenham a palavra TV (usar like) - select * from tb_produto where produto like '%tv%';

 7->Contar o total de produtos da fabricante Samsung - select count(quantidade) from tb_produto where produto like'%samsung%';

 8->Somar o valor total de produtos da apple em estoque(criar a coluna total) - select produto,valor,quantidade,valor*quantidade  as total from tb_produto where fabricante='Apple';

 9-> Listar os produtos com a palavra SMART no nome(usar like) -select * from tb_produto where produto like '%smart%';

10-> Listar os produtos da marca bosch e funko - 
select * from tb_produto where fabricante='funko' or fabricante='bosch';

11-> Listar os produtos da categoria 11 (games) - select * from tb_produto where id_categoria=11;

12-> Listar apenas o produto e valor por ordem do menor para o maior valor - select produto,valor as total from tb_produto order by valor;
ou select produto,valor from tb_produto order by valor;

13-> Contar o total de produtos em estoque(geral) -
 select sum(quantidade) from tb_produto;
 ou select count(id) from tb_produto;

14-> Listar o maior valor de produto - select max(valor) from tb_produto;
ou select * from tb_produto order by valor desc limit 1; (mostra qual é o produto além do valor)


AULA 30-05

update e delete precisa usar com where, não tem ctrl z, usou não tem volta


update - atualiza os dados 

UPDATE tb_produto SET valor (pode ser qualquer campo da tabela, lembrando que texto precisa estar dentro de '', numero não!) = 1400 WHERE id = 1; atualizar a tabela produto e set (mudar) o valor de 1400, na id 1 , se não colocar o where vai alterar todos os produtos. 

INSERT INTO tb_categoria (categoria) VALUES ('Brinquedos'); insere nova categoria 

UPDATE tb_produto SET quantidade =33 WHERE id IN(3,5,10); o in é que naqueles itens vão ser alterados em ordem que colocar.

UPDATE tb_produto SET quantidade =50 WHERE quantidade > 25; - altera os produtos que tem 25 de estoque para 50 unidades

SELECT * FROM tb_produto WHERE id=13; - mostra o item que quer ver.

EXERCICIOS

1 - atualizar o registro id 28 para o valor= 105 reais; - UPDATE tb_produto SET valor = 105 WHERE id = 28;

2- atualizar o registro id_categoria 4 do produto id_categoria 10; UPDATE tb_produto SET id_categoria = 10 WHERE id=4;

3 - atualizar o fabricante do id 21 para dell - UPDATE tb_produto SET fabricante = 'Dell' WHERE id=21;

4 - atualizar o registro id 42 para fabricante = BikeCity e valor = 6800 - UPDATE tb_produto SET valor = 6800, fabricante = 'BikeCity' WHERE id=42;

AULA 31-05

DELETE - não pergunta se tem certeza, precisa ter sempre bkp. - sempre colocar where

DELETE FROM tb_produto WHERE id=13; - deleta o item selecionado
DELETE FROM tb_produto WHERE id IN(3,16,27); deleta itens selecionados

ALTER = para alterar alguma estrutura da tabela.

ALTER TABLE tb_filmes ADD genero VARCHAR(15) NOT null; - inclui um campo na tabela

 ALTER TABLE tb_filmes ADD tempo CHAR(4) NOT NULL AFTER ano; adiciona campo tempo depois do ano. sempre depois da coluna selecionada.

 ALTER TABLE tb_filmes CHANGE lançamento lancamento CHAR (4) NOT NULL; altera nome da coluna

 ALTER TABLE tb_filmes DROP genero; - alterar a tabela e retirar o campo selecionado


 AULA 01-06

 Modelo de banco de dados = MER - Modelo Entidade Relacionamento - é fazer o banco de dados de forma visual, um diagrama.
 
 Programa BrModelo para desenhar o diagrama, existem outros .

 NORMALIZAÇÃO de um campo - é dar identificação a um campo no banco de dados. (exemplos = Id e categoria, id e genero)

 


